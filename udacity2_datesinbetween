def isLeapYear(year):
     if year%400 == 0:
        return True
     if year%100 == 0:
        return False
     if year%4 == 0:
        return True
     return False

def daysInMonth(year,month):
    if month == 1 or month == 3 or month == 5 or month == 7 or month == 8 or month == 10 or month == 12:
        return 31
    else:
        if month == 2:
            if isLeapYear(year):
                return 29
            else:
                return 28
        else:
            return 30
def nextDay(year, month, day):
    if day < daysInMonth(year, month):
        return year, month, day+ 1
    else:
        if month < 12:
             return year, month + 1, 1
        else:
             return year + 1, 1, 1

def dateIsBefore(year1, month1, day1, year2, month2, day2):
    if year1 < year2:
       return True
    if year1 == year2:
        if month1 < month2:
           return True
        if month 1 == month2:
           return day1 < day2
    return False

def daysBetweenDates(year1, month1, day1, year2, month2, day2):
    days = 0
    assert not dateIsBefore(year2, month2, day2, year1, month1, day1)
    while dateIsBefore(year1, month1, day1, year2, month2, day2):
           year1, month1, day1 = nextDay(year1, month1, day1)
           day += 1
    return days







*******another solution*********

def is_leap_year(year):
    result = False
    if year % 4 == 0:
        result = True
        if year % 100 == 0 and year % 400 != 0:
            result = False
    return result


def days_in_month(year, month):
    # days_of_month[0] is a dummy value so that the days of month i can be found at position i
    days_of_month = [0,31,28,31,30,31,30,31,31,30,31,30,31]

    days = days_of_month[month]
    if month == 2 and is_leap_year(year):
        days += 1
    return days


def days_in_year(year):
    days = 365
    if is_leap_year(year):
        days += 1
    return days


def days_since_0(year, month, day, y):
    total = 0
    while y < year:
        total += days_in_year(y)
        y += 1

    m = 1           # month0 is January
    while m < month:
        total += days_in_month(year, m)
        m += 1

    return total + day  # finish adding the days


def daysBetweenDates(year1, month1, day1, year2, month2, day2):
        # make sure that the first date is the same or less than the second one 
        assert ( (year1 < year2) or
                 (year1 ==  year2 and month1 < month2) or
                 (year1 == year2 and month1 == month2 and day1 <= day2) )

        year0 = year1   # assign year0; month0 and day0 are always January 1st
        return days_since_0(year2, month2, day2, year0) - days_since_0(year1, month1, day1, year0)
